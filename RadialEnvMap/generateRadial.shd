[Vertex shader]

#define PI 3.141592653589793

out vec2 texCoord;

void main(){
	gl_Position = gl_Vertex;

  // x = 0 .. 2PI, y = 0 .. PI
	texCoord = (gl_Vertex.xy * vec2(1.0, 0.5)) + vec2(1.0, 0.5);
	texCoord *= PI;
}


[Fragment shader]

uniform samplerCube Env;

in vec2 texCoord;
out vec4 fragColor;

void main(){

  // SphericalCoordinates
  // http://mathworld.wolfram.com/SphericalCoordinates.html
  vec3 coords;
  coords.x = cos(texCoord.x) * sin(texCoord.y);
  coords.z = sin(texCoord.x) * sin(texCoord.y);
  coords.y = cos(texCoord.y);

	fragColor.rgb = texture(Env, coords).rgb;
	fragColor.a = 1.0;
}
